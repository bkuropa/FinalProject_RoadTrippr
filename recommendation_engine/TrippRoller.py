# import dependencies
import numpy as np
from numpy.random import choice
import pandas as pd
import os
import random

# TrippRoller uses the file called 'weights.csv' generated by ClusterAvgValues.ipynb

ClusterAvgValues = pd.read_csv('recommendation_engine/Output/weights.csv')
print(ClusterAvgValues.columns)
ClusterAvgValues = ClusterAvgValues.drop('Unnamed: 0', 1)

# function to roll 1 activity, 1 sightseeing, 1 food according to cluster

def roll_trip():
    # need to pass cluster value here from user profile
    cluster = 0

    # roll an activity
    activity = list(ClusterAvgValues[['resorts', 'beaches', 'parks', 'theatres', 'museums', 'malls', 'zoo', 'art-galleries', 'dance-clubs', 'swimming-pools', 'gyms', 'beauty-spas']])
    activity_weights = np.array(ClusterAvgValues[['resorts', 'beaches', 'parks', 'theatres', 'museums', 'malls', 'zoo', 'art-galleries', 'dance-clubs', 'swimming-pools', 'gyms', 'beauty-spas']])
    cl_act_weights = activity_weights[cluster]
    normalized_act = cl_act_weights / cl_act_weights.sum()
    act_choice = choice(activity, p=normalized_act)

    # roll a sightseeing
    sightseeing = list(ClusterAvgValues[['churches', 'view-points', 'monuments', 'gardens']])
    sightseeing_weights = np.array(ClusterAvgValues[['churches', 'view-points', 'monuments', 'gardens']])
    cl_sight_weights = sightseeing_weights[cluster]
    normalized_sight = cl_sight_weights / cl_sight_weights.sum()
    sight_choice = choice(sightseeing, p=normalized_sight)

    # roll food&drink
    food = list(ClusterAvgValues[['restaurants', 'pubs-bars', 'burger-pizza', 'juice-bars', 'bakeries', 'cafes']])
    food_weights = np.array(ClusterAvgValues[['restaurants', 'pubs-bars', 'burger-pizza', 'juice-bars', 'bakeries', 'cafes']])
    cl_food_weights = food_weights[cluster]
    normalized_food = cl_food_weights / cl_food_weights.sum()
    food_choice = choice(food, p=normalized_food)

    trip_types = [act_choice, sight_choice, food_choice]
    return trip_types